public class ManipulateAccounts {

    public ManipulateAccounts () {

    }

    public static void deleteAllAccounts () {
        try {
            delete [select Id from Account];
        } catch (DmlException e) {
            System.debug('Got DmlException while deleting Accounts' + e.getMessage());
        }
    }

    public static void createAccounts (Integer nAccounts, Integer nContacts) {
        Integer i, j;
        List<Account> aList = new List<Account>();
        List<Contact> cList = new List<Contact>();

        for (i = 0; i < nAccounts; ++i)
            aList.add(new Account(Name='TestAccount ' + String.valueOf(i)));

        try {
            insert aList;
        } catch(DmlException e) {
            System.debug('Dml Exception occurred while inserting Accounts' + e.getMessage());
        }

        for (i = 0; i < nAccounts; ++i)
            for (j = 0; j < nContacts; ++j)
                cList.add(new Contact(LastName='TestContact ' + String.valueOf(j) + 'for accountId: ' + aList[i].ID, AccountId=aList[i].ID));

        try {
            insert cList;
        } catch (DmlException e) {
            System.debug('Dml Exception occurred while inserting contacts' + e.getMessage());
        }
    }

    public static void updateEmail () {
        // Set<Id> accountIds;
        // Map<Id, Account> accountRecords;

        // accountIds = new Set<Id>();
        // accountRecords = new Map<Id, Account>();

        // for (Contact contact : [select Id, Email, accountId from Contact])
        //     accountIds.add(contact.accountId);

        // for (Id id : accountIds)
        //     if (!accountRecords.containsKey(id))
        //         accountRecords.put(id, new Account(id = id, ContactEmails__c  = ''));

        // // Query all contacts for all accounts, update Rollup Field value
        // for(Contact contact :[select id, Email, AccountID from Contact where AccountId in :accountIds])
        //     accountRecords.get(contact.AccountId).ContactEmails__c  += contact.Email + ';';

        Map<Id, Account> accountRecords;

        accountRecords = new Map<Id, Account>([select id, ContactEmails__c from Account]);

        for (Contact contact : [select id, Email, accountId from Contact])
            accountRecords.get(contact.accountId).ContactEmails__c = contact.Email + ';';

        try {
            // Commit changes to the database
            Database.update(accountRecords.values());
        } catch (DmlException e) {
            System.debug('DmlException occurred while updating accounts' + e.getMessage());
        }
    }

    public static void updateEmail (Account account) {
        List<Contact> cList;
        String contactEmails;

        contactEmails = '';

        cList = [select Id, Email from Contact where accountId=:account.ID];
        for (Contact contact : cList)
            If (contact.Email != NULL)
            	contactEmails += contact.Email + ';';

        account.ContactEmails__c = contactEmails;

        try {
            update account;
        } catch (DmlException e) {
            System.debug('DmlException occurred while updating account ' + e.getMessage());
        }
    }

}